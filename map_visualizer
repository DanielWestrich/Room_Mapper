/* 
 * Title: map_visualizer
 * By: Daniel Westrich
 * Date: 7/20/2017
 * Note: This program is designed to run on a Processessing console.
*/

int i = 0;
//int[] distances = new int[180];
int[] distances = {23,14,17,37,33,19,41,20,21,19,18,16,16,17,16,15,14,15,15,16,17,16,15,15,14,16,18,23,34,48,48,48,47,50,53,52,53,55,65,56,61,64,51,30,23,18,17,17,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,14,15,20,25,27,29,32,32,32,33,34,35,36,36,37,36,36,38,36,36,34,28,23,21,23,25,26,25,26,27,27,24,24,23,24,23,24,32,32,30,29,28,32,31,30,31,31,32,32,32,39,52,57,44,35,32,31,30,23,24,28,30,27,27,27,27,24,22,22,21,19,19,19,19,16,14,13,15,18,18,18,17,15,22,26,55,60,61,57,53,55,48,90,88,65,49,47,39,34,31,27,21,18,15,14,14,12,14,16,17,21,36,43,43,40,35,38};

float FACTOR = 5;
float ABSTRACTION_LEVEL = 1;

void setup(){
  background(255,255,255);
  size(800,800);
  //myPort = new Serial(this, "COM22", 9600);
  //myPort.bufferUntil('\n');
}

void draw(){
  if (i < 179) {
// stroke(random(255),random(255),random(255));
    noFill();
    line((int)calcX(distances[i], i), (int)calcY(distances[i], i), (int)calcX(distances[i+1], i), (int)calcY(distances[i+1], i));
    i++;
  }
}

float calcX(float x, int i)
{
  return x * cos(radians(i * ABSTRACTION_LEVEL)) * FACTOR + 400;
}
 
float calcY(float y, int i)
{
  return y * sin(radians(i * ABSTRACTION_LEVEL)) * FACTOR + 300;
}
